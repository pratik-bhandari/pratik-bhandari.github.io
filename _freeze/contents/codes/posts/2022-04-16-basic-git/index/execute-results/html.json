{
  "hash": "1f1ea4130dfcacfe2558c69cc453c7ee",
  "result": {
    "markdown": "---\ntitle: \"A bit of git-ting\"\nsubtitle: |\n  Create and delete repo\nauthor: Pratik Bhandari\ndate: 2022-04-16\ncategories:\n  - codes\n  - git\n  - push\n  - pull\n  - remote\n  - local\n  - \"2022\"\n---\n\n<!-- Oh, so some links brought you here. Cool.\\ -->\n\n***\n\nThe first thing that I do for any data analyses or writing project is create a remote git repository either in github or in gitlab. Then I create a local R project in R Studio, and connect it to the remote git repo. The 'how-to' of this process can be found online; I'll write up a brief overview, probably.\n\nThis post is to remind myself of most frequently used git commands.\n\n<!-- When you click on 'New Project' on the top right drop down menu, R Studio give you three choices and one of them is to *Checkout a project from a version control repository*.-->\n\n::: {.cell}\n\n```{.r .cell-code}\n# Push local changes to the remote repo:\ngit push -u origin master\n\n# Creat and checkout new branch:\ngit checkout -b NewBranchName\n\ngit push -u origin BranchIamWorkingOn # to push from local repo to remote repo if the remote repo doesn't have this `BranchIamWorkinOn` setup up already\n\n# Delete a local branch:\ngit branch -D BranchToBeDeleted\n```\n:::\nBe careful on deleting. The `-D` is a hard delete! \n\n\nMerge branches locally:\n\n::: {.cell}\n\n```{.r .cell-code}\ngit checkout main #First switch to the main/master branch\ngit merge BranchIwantToMerge #The branch still exists after merging\n```\n:::\n\nThis was a dirty note down ;)\n\nOther frequently used commands are `git pull`, `git merge`, `git rm -r --cached`, etc.\n\nTune in for notes on frequently used `R`, `bash` and `git` commands.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}